// 'MainScreen Bitmap
const unsigned char MainScreenImg [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x38, 0x00, 0xc1, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
	0x07, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xc0, 0x01, 0xe0, 0x18, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0c, 0x44, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x03, 0x80, 0x0e, 0x06, 0x44, 0x20, 0x80, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x78, 0x03, 0x80, 0x26, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x0e, 
	0x00, 0xe0, 0x22, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
	0xf0, 0x00, 0x03, 0xc0, 0x38, 0x00, 0x02, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x70, 0x04, 0x00, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xff, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x30, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x07, 0xc0, 
	0x00, 0x0f, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
	0x80, 0x00, 0x78, 0x00, 0x3f, 0xe0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x7f, 0xf0, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x0f, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x80, 0x00, 0x7f, 0xf8, 0x1f, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
	0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xff, 0xf8, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x3c, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x0f, 0xff, 0xe0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 
	0xf0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x0c, 0x00, 0x00, 0x01, 0xf0, 0x00, 
	0x00, 0x00, 0x1f, 0xc0, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3e, 0x00, 0x00, 0x01, 0x80, 0x07, 0x80, 0x20, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x1c, 0x01, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x07, 0x00, 0x3c, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x02, 
	0x21, 0xc0, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 
	0x30, 0x00, 0x01, 0x18, 0x60, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 
	0x1e, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 
	0x00, 0x3c, 0x00, 0x60, 0x00, 0x01, 0x81, 0x11, 0x10, 0x82, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xe0, 0x00, 0x07, 0xc0, 0x07, 0x80, 0x00, 0x06, 0x02, 0x11, 0x18, 0x41, 0x81, 0x80, 0x00, 
	0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x3c, 0x00, 0x38, 0x00, 0x04, 0x04, 0x04, 0x11, 0x08, 0x00, 
	0xc0, 0x60, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x03, 0xc0, 0x03, 0xc0, 0x00, 0x18, 0x00, 0x04, 
	0x01, 0x08, 0x00, 0x30, 0x1c, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 
	0x60, 0x40, 0x08, 0x21, 0x84, 0x00, 0x18, 0x03, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x20, 0x00, 
	0xe0, 0x03, 0x01, 0x81, 0x80, 0x10, 0x20, 0x80, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x00, 0x08, 0x07, 0x03, 0x06, 0x30, 0x20, 0x80, 0x04, 0x06, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0x80, 0x00, 0x18, 0x00, 0x00, 0x0c, 0x0c, 0x0c, 0x20, 0x20, 0x80, 0x04, 0x43, 
	0x04, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18, 0x18, 0x40, 0x20, 
	0x82, 0x02, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0x60, 
	0x30, 0xc0, 0x00, 0x02, 0x01, 0x00, 0x41, 0x80, 0x00, 0x00, 0x20, 0x00, 0x00, 0x38, 0x00, 0x30, 
	0x00, 0x01, 0x80, 0x60, 0x00, 0x00, 0x00, 0x01, 0x08, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xc0, 0x01, 0xc0, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x86, 0x18, 0x30, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0x00, 0x06, 0x00, 0x40, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0c, 
	0x18, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x18, 0x01, 0x80, 0x30, 0x00, 0x02, 0x00, 0x40, 0x40, 
	0x00, 0x01, 0x03, 0x04, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x60, 0x00, 0x00, 0x40, 0x00, 0x02, 
	0x00, 0x40, 0x40, 0x00, 0x00, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x10, 0x40, 0x80, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0f, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x30, 0x00, 
	0x00, 0x00, 0x78, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x01, 0xff, 
	0xc0, 0x18, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 
	0x00, 0x07, 0xff, 0xe0, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x0c, 0x00, 0x3c, 0x01, 0x00, 0x00, 
	0x7f, 0xff, 0x00, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xfe, 
	0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xfe, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xff, 0x80, 0x00, 0x07, 0xff, 0xf9, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xf0, 0xfe, 0x80, 0xfd, 0xf6, 0xff, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0x00, 0x7f, 0xf3, 0xb0, 0x1f, 0xf1, 
	0xfb, 0x92, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xf3, 
	0x00, 0x07, 0xff, 0xf0, 0x12, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0x9f, 0xff, 0xe3, 0x00, 0x01, 0xff, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x0c, 0x00, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0xe0, 0x00, 0x00, 
	0x30, 0x00, 0x3f, 0xfe, 0xcf, 0x73, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xc8, 0x00, 0x00, 0x0f, 0xff, 
	0xf0, 0x00, 0x80, 0x00, 0x00, 0xff, 0xfc, 0xcf, 0x33, 0xff, 0xff, 0xc0, 0x00, 0x1c, 0x00, 0x00, 
	0x00, 0x07, 0xff, 0xfc, 0x01, 0xc0, 0x00, 0x01, 0xff, 0xf0, 0x07, 0x00, 0x3f, 0xff, 0xc0, 0x00, 
	0x30, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x80, 0x00, 0x0f, 0xff, 0xe0, 0x07, 0x00, 0x07, 
	0xff, 0x80, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x01, 0xc0, 0x00, 0x3f, 0xff, 0x80, 
	0x02, 0x00, 0x01, 0xff, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x03, 0xc0, 0x00, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 
	0x0f, 0xf0, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0f, 0xfc, 0x08, 0x80, 0x1f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x01, 0x80, 0x7f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x03, 0xcf, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x27, 0xef, 0xff, 0xfe, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xef, 
	0xf3, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xe9, 0xe0, 0xf8, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x7c, 0x00, 0x02, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xf0, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x1c, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x1d, 0xfc, 
	0x00, 0x00, 0x3e, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x11, 0xc0, 0x00, 0x00, 0x78, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0xf8, 0x00, 0x0b, 0x80, 0x00, 0x00, 0x01, 0xff, 
	0xe6, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x1c, 0x00, 0x07, 0xc0, 0x00, 
	0x00, 0x07, 0xff, 0x80, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x20, 0x00, 0x1e, 0x00, 
	0x07, 0x00, 0x00, 0x00, 0xff, 0xfb, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0xf0, 
	0x00, 0x3f, 0x00, 0x0f, 0x00, 0x00, 0x03, 0xff, 0xf1, 0x80, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xbc, 0xf8, 0x00, 0x38, 0x00, 0x1b, 0xc0, 0x00, 0x1f, 0xff, 0xf1, 0x80, 0x00, 0x0f, 0x00, 
	0x00, 0x00, 0x00, 0x39, 0x80, 0x60, 0x00, 0xfc, 0x00, 0x07, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 
	0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xe0, 0x01, 0xfe, 0x00, 0x07, 0x00, 0x01, 0xff, 
	0xff, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x03, 0xc1, 0xf8, 0x00, 0x37, 0x00, 0x0f, 
	0x00, 0x07, 0xff, 0xf7, 0x80, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x07, 0xe0, 0x3c, 0x00, 
	0x30, 0x00, 0x1f, 0xc0, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x0d, 
	0xf0, 0x78, 0x00, 0x78, 0x00, 0x1b, 0x81, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0x88, 0x3d, 0xb8, 0xf0, 0x00, 0xfe, 0x00, 0x07, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x1f, 0xf8, 0x39, 0xc9, 0xf8, 0x01, 0x9f, 0x00, 0x07, 0x9f, 0xff, 0xff, 0xe0, 
	0x00, 0x00, 0x03, 0x88, 0x00, 0x00, 0x00, 0x48, 0x03, 0xc1, 0xfc, 0x00, 0x30, 0x00, 0x0f, 0x93, 
	0xe7, 0xf0, 0x00, 0x00, 0x00, 0x19, 0x8c, 0x18, 0x00, 0x00, 0x08, 0x03, 0xe0, 0xf6, 0x00, 0x38, 
	0x03, 0xbf, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x8c, 0x18, 0x00, 0x00, 0x0c, 0x07, 0xf0, 
	0xf0, 0x00, 0xfc, 0x3f, 0x17, 0x70, 0x00, 0x00, 0x00, 0x04, 0x00, 0x39, 0x8e, 0x3c, 0x00, 0x00, 
	0x0c, 0x0d, 0xbf, 0xf8, 0x03, 0xff, 0x00, 0x07, 0x80, 0x00, 0x00, 0x22, 0x04, 0x00, 0x39, 0x9c, 
	0x18, 0x00, 0x00, 0x5c, 0x39, 0xc5, 0x7e, 0x13, 0x1b, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x32, 0x0c, 
	0x00, 0x39, 0x8e, 0x1c, 0x00, 0x00, 0x4c, 0x73, 0xc0, 0x72, 0x30, 0x38, 0x00, 0x1f, 0xe0, 0x00, 
	0x00, 0x36, 0x0c, 0x01, 0x3d, 0x8e, 0x1c, 0x00, 0x00, 0x4c, 0x07, 0xe0, 0x70, 0x00, 0x7e, 0x00, 
	0x0b, 0xb0, 0x00, 0x00, 0x36, 0x2c, 0x01, 0x1f, 0x8e, 0x1c, 0x00, 0x00, 0x4c, 0x0f, 0xf1, 0xf8, 
	0x03, 0xf7, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x24, 0x09, 0xbd, 0x8e, 0x1c, 0x00, 0x00, 0x4c, 
	0x1d, 0xfb, 0xfc, 0x03, 0x38, 0x00, 0x07, 0x80, 0x00, 0x00, 0x36, 0x20, 0x09, 0x9d, 0x1e, 0x38, 
	0x00, 0x00, 0x44, 0x39, 0xf0, 0x3e, 0x00, 0x7c, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xa9, 0x8f, 0x18, 0x00, 0x00, 0x40, 0x01, 0xc0, 0x72, 0x00, 0xff, 0x00, 0x3b, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x09, 0x84, 0x09, 0x00, 0x00, 0x00, 0x01, 0x80, 0xf0, 0x01, 0xf7, 0x00, 0x03, 
	0x00, 0x3e, 0x00, 0xff, 0xff, 0x80, 0x00, 0x04, 0x09, 0x00, 0x00, 0x00, 0x01, 0x81, 0xf8, 0x00, 
	0x30, 0x00, 0x03, 0x00, 0x00, 0x23, 0xe1, 0xc0, 0x7c, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 
	0x83, 0xfc, 0x00, 0x30, 0x00, 0x03, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x61, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x80, 0x76, 0x00, 0x30, 0x00, 0x03, 0x00, 0x00, 0x7f, 0xf0, 0x3f, 0xf0, 0x7f, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x80, 0xf0, 0x00, 0x30, 0x00, 0x03, 0x0c, 0xc0, 0x1e, 0x18, 
	0x03, 0x18, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x81, 0xf8, 0x00, 0x30, 0x00, 0x23, 0x07, 
	0x60, 0x23, 0x06, 0x18, 0x07, 0xf0, 0x03, 0x80, 0x00, 0x00, 0x00, 0xc3, 0xc3, 0xfc, 0x00, 0x30, 
	0x00, 0x73, 0x03, 0x81, 0x81, 0xe7, 0xfc, 0x00, 0x78, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xc3, 0x87, 
	0x3e, 0x00, 0x38, 0x00, 0x73, 0x00, 0xe1, 0xfa, 0x01, 0x8f, 0x00, 0x1e, 0x00, 0x3f, 0x87, 0x00, 
	0x00, 0xe3, 0x80, 0x20, 0x00, 0x20, 0x00, 0x70, 0x00, 0x70, 0x3f, 0x80, 0xe3, 0xf8, 0x01, 0x8f, 
	0x1f, 0xf0, 0x7f, 0xc0, 0xe0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x70, 0x00, 0x38, 0x01, 0xe2, 0x00, 
	0x00, 0x00, 0x7f, 0xc0, 0x00, 0x07, 0x3c, 0xe0, 0x00, 0x22, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0e, 
	0x01, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x83, 0xff, 0x80, 0xe0, 0x00, 0x33, 0x00, 0x00, 0x00, 
	0x10, 0x00, 0x03, 0x1f, 0x83, 0xe7, 0xe0, 0x20, 0x00, 0x0c, 0x00, 0xe1, 0xfc, 0xe0, 0x00, 0x33, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xfc, 0x7f, 0xf0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x7c, 
	0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xce, 0x00, 0x3f, 0x83, 0x9e, 0x00, 
	0x39, 0xfc, 0x04, 0x00, 0x00, 0x70, 0x00, 0x04, 0x00, 0x00, 0x31, 0x80, 0x3f, 0xe3, 0x84, 0x1f, 
	0xc0, 0x63, 0x00, 0x04, 0x76, 0x00, 0x00, 0x00, 0x60, 0x00, 0x8c, 0x00, 0x00, 0x1b, 0x00, 0x1f, 
	0xfd, 0xfe, 0x00, 0xf0, 0x01, 0xec, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 
	0x0e, 0x00, 0x07, 0xff, 0xf3, 0x00, 0x00, 0x30, 0xfe, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x70, 0x00, 0x01, 0x7c, 0x00, 0x00, 0x3f, 0xf9, 0xfe, 0x03, 0xf8, 0x07, 0x80, 0x00, 0x04, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x0f, 0xfe, 0x7a, 0x00, 0xfc, 0x01, 0xfe, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x7f, 0x83, 0x00, 
	0x07, 0xa0, 0x07, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
	0x07, 0xc1, 0xc0, 0x03, 0xe0, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfb, 0xff, 0xff, 0xff, 
	0x80, 0x00, 0x00, 0x00, 0x61, 0xf0, 0x00, 0x71, 0x80, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xd9, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x30, 0x18, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0xdd, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1c, 0x1f, 0xc0, 0x1f, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0xde, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0x80, 0x70, 
	0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xbe, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 
	0x03, 0xe0, 0x3e, 0x00, 0x1f, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0xbf, 0x7f, 0xff, 0xff, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0xf0, 0x1f, 0x80, 0x03, 0xf8, 0x10, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0xbf, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x3f, 0xbf, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x08, 0x00, 0x1f, 0x80, 0x00, 0x80, 0x3e, 0x40, 
	0x00, 0x00, 0x00, 0x7e, 0x3f, 0xdf, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x0c, 0x00, 0x07, 0xfc, 0x1f, 
	0xc0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x7e, 0x3f, 0xef, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x06, 0x00, 
	0x00, 0xff, 0x0f, 0xc0, 0x00, 0x78, 0x00, 0x00, 0x00, 0xfe, 0x1f, 0xe7, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0x06, 0x00, 0x00, 0x7f, 0xc0, 0xf0, 0xc0, 0x3c, 0x00, 0x00, 0x01, 0xfc, 0x1f, 0xf3, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x07, 0x00, 0x00, 0x1f, 0xe0, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x13, 0xfc, 
	0x1f, 0xf3, 0xff, 0xff, 0xff, 0x20, 0x00, 0x07, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x60, 0x00, 0x00, 
	0x00, 0x17, 0xfc, 0x1f, 0xf9, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0x00, 0x00, 0x01, 0xfc, 0x00, 
	0x3e, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x27, 0x90, 0x00, 
	0x00, 0xff, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x10, 0x38, 0x0f, 0xfc, 0x7f, 0xff, 0xff, 0xc0, 0x00, 
	0x0f, 0x90, 0x00, 0x00, 0x3f, 0xc0, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x30, 0x0f, 0xfe, 0x7f, 0xff, 
	0x00, 0x80, 0x00, 0x3f, 0x90, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x78, 0x00, 0x00, 0x00, 0x20, 0x04, 
	0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xb0, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xb0, 0x00, 0x00, 0x00, 0x0f, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xb0, 0x00, 0x00, 
	0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00
};


// Window Initialization
// Window testWindow = Window(); 
WindowReminder reminderWindow = WindowReminder(); 
WindowClock clockWindow = WindowClock();
WindowWeather weatherWindow = WindowWeather();
Window* listWindows[] = {&reminderWindow, &clockWindow, &weatherWindow}; // Clock window has idx 1
Window* listSecondWindows[] = {NULL, NULL, &weatherWindow}; // Optional Second Window for several windows

// Module Initialization
Module reminderModule = Module(green, iconReminder);
Module clockModule = Module(blue, iconClock);
Module weatherModule = Module(purple, iconWeather);

// List of our modules
Module listModules[] = {reminderModule, clockModule, weatherModule}; 
// int numElements = 3; // Number of modules in the menu
int numElements = sizeof(listModules) / sizeof(listModules[0]); // Get number of elements in listModules
String version = "V0.4.3"; 
int CENTER_SELECTED_IDX = (SELECTION_IDX + 1) % numElements; // Initial selection value - redefined in Screen.ino



// List of the three modules shown on the screen. 
Module displayModules[3] = {
  listModules[(SELECTION_IDX) % numElements],
  listModules[(SELECTION_IDX + 1) % numElements],
  listModules[(SELECTION_IDX + 2) % numElements]  
};

void updateCurrentScene(){
  // Make sure that the clock window is selected and the date is different than what it was before
  if((APP_LAYER == 2  && CENTER_SELECTED_IDX == 1) && (OLD_TIME != DATE_TIME)){
    listWindows[CENTER_SELECTED_IDX]->updateClock(DATE_TIME); // Update our text
    OLD_TIME = DATE_TIME; // Update time. 
  }
}

// Check if second layer selection is null.
bool selectionIsNull(int idx){
  return(listSecondWindows[idx] == NULL);
}

void toggleScreen(){
  if(SCREEN_RETRACTED){
    clearScreen(); // Turn off screen
  }else{
    updateWindows(); // Open to the screen we have. 
  }
}

// Update the screen based on the current layer that we're in.
void updateWindows(){
  switch(APP_LAYER){
    case(0): // Main Screen
      clearScreen();
      drawMainScreen(); 
      break;
    case(1): 
      if(PREV_SELECTION_IDX != SELECTION_IDX){ // Update modules only if we only requested a module change. 
        redrawModules();
      }else{ // If we switched a layer, draw the entire menu. 
        clearScreen(); 
        drawFullMenu();
      }
      break;
    case(2):
      drawSelectedWindow(CENTER_SELECTED_IDX); // Draw Window of selected index. 
      break;
    case(3): 
      drawSecondSelectWindow(CENTER_SELECTED_IDX); 
      break;
  } 
  // Update PREVIOUS values. 
  PREV_SELECTION_IDX = SELECTION_IDX; 
  PREV_APP_LAYER = APP_LAYER; 
  CENTER_SELECTED_IDX = (SELECTION_IDX + 1) % numElements; 
}

void updateSelectedScreen(){
  Serial.println("UPDATE CALL");
  switch(APP_LAYER){
    case(2):
      listWindows[CENTER_SELECTED_IDX]->update(); 
      break;
    case(3):
      break;
  }
}

void drawSelectedWindow(int selected){
  clearModules();
  listWindows[selected]->drawWindow();
}

// Draw second-layer selection
void drawSecondSelectWindow(int selected){
  if(listSecondWindows[selected] != NULL){
    clearModules(); 
    listSecondWindows[selected]->drawWindow(); 
  }else{
    Serial.println("ERROR in DRAWING SECOND WINDOW: SELECTION IS NULL");
  }
}

// Draw box of module height spanning the width of three modules
void clearModules(){
  tft.fillRoundRect(9, 75, 303, 110, 15, ST77XX_BLACK);          
}

// Draw the full menu.
void drawFullMenu(){
  drawTopOutline();
  drawModules();   // Draw the three selected modules
  drawPointer();   // Show selected
  drawBluetoothText(); 
  drawBluetoothStatus(BLUETOOTH_CONNECTED); 
}


// Redraw only our modules based on the new selection idx. 
void redrawModules(){
  // If our selection is out of bounds, reset the selection to the leftmost. 
  if(SELECTION_IDX < 0){
    SELECTION_IDX = numElements - 1; 
  }

  CENTER_SELECTED_IDX = (SELECTION_IDX + 1) % numElements; // Updated the selected window idx
  //Update Our Modules Accordingly
  displayModules[0] = listModules[(SELECTION_IDX) % numElements];
  displayModules[1] = listModules[(SELECTION_IDX + 1) % numElements];
  displayModules[2] = listModules[(SELECTION_IDX + 2) % numElements];

  // Draw updated modules
  drawModules(); 
}

// Draw the three modules 
void drawModules(){
  // Draw the three items in display modules
  for(int i = 0; i < 3; i++){ 
    displayModules[i].draw(i);
  }
}

void drawPointer(){
  tft.fillTriangle(148, 200,
                   160, 192,
                   172, 200, ST77XX_WHITE);
}

void hidePointer(){
  tft.fillTriangle(148, 200,
                  160, 192,
                  172, 200, ST77XX_BLACK);
}

void drawTopOutline(){
  // Border
  tft.drawRoundRect(9, 35, 305, 35, 15, ST77XX_WHITE); 
  drawText(version, 24, 45, 2); 
}

void drawBluetoothText(){
  drawText("Bluetooth: ", 150, 45, 2); 
}

// SHOULD BE USED TO MANAGE BT
void drawBluetoothStatus(bool isConnected){
  if(isConnected){
    tft.fillRoundRect(270, 45, 25, 15, 3, ST77XX_GREEN);
  } else {
    tft.fillRoundRect(270, 45, 25, 15, 3, ST77XX_RED);    
  }
}

// Draw Our Main Screen
void drawMainScreen(){
  drawTopOutline(); 
  drawBluetoothText();
  drawBluetoothStatus(deviceConnected); 
  drawText("IRIS", 9, 100, 5);
  tft.drawBitmap(164, 75, MainScreenImg, 150, 150, ST77XX_WHITE);
  
}

void drawText(String text, int x, int y, int size) {
  tft.setCursor(x, y);
  tft.setTextSize(size);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextWrap(true);
  tft.print(text);
}

void drawColorText(String text, int x, int y, int size, uint16_t color){
  tft.setCursor(x, y);
  tft.setTextSize(size);
  tft.setTextColor(color);
  tft.setTextWrap(true);
  tft.print(text);
}

// Used for fast erasing
void drawShadowText(String text, int x, int y, int size) {
  tft.setCursor(x, y);
  tft.setTextSize(size);
  tft.setTextColor(ST77XX_BLACK);
  tft.setTextWrap(true);
  tft.print(text);
}

// Init Screen
void screenStart(){
  tft.init(240, 320);
  tft.setRotation(1);  // 320x240 (Rotated)
  clearScreen();
}


void clearScreen(){
  tft.fillRect(0, 0, 320, 240, ST77XX_BLACK);
  // tft.fillRect(ST77XX_BLACK)
  // tft.fillScreen(ST77XX_BLACK); 
}